//lecture
https://drive.google.com/file/d/1lRC4nE3IXnqD20Azn0rhEOjnHPWGkWwM/view
or http://blt.ly/2lGDO2E

계약은 어떻게 네트워크에서 이용하는가??
abi는 메타정보로 contract의 주소를 이용하여 abi 를 호출하는 방식
metamask라는 애플리케이션을 이용(관리주체, 인센티브(gas) 지불)

metamask는 트랜잭션을 기록할때 비용을 처리하는
이 계약을 관리하는 거래의 책임자.
전자서명과 같은

bytecode는 이더리움에 배포 


리액트 프로젝트 만들기(node js and npm설치시)
npx create-react-app myreact


atom설치
플러그인 설치
platformio-ide-terminal -> ctrl + ~ -> terminal

truffle설치
npm install -g truffle@5.0.36

truffle접속
http://trufflesuite.com

윈도우에서 트러플에러 잡기
windows icon + x + a (관리자용 powershell)
 npm install -g --production windows-build-tools --vs2015

설치확인
npm config list


트러플 프로젝트 생성
폴더 하나 만들고
truffle unbox react 실행

위의 실행은 아래 두 문장과 같음
truffle init
npm create-react-app client


웹서버인(?) 테스트 네트워크
ganache실행

http://trufflesuite.com
에서
suit>ganache

->Need another OS download?

아래 v2.1.1 - This is not pudding 🥄 에서
Ganache-2.1.1-win-x64.appx 
또는
Ganache-2.1.1-win-setup.exe

-> quick start


트러플 프로젝트에서
truffle-config.js
networks에서
development: {
     host: "127.0.0.1",     // ganache network server
     port: 7545,            // Standard Ethereum port (default: none)
     network_id: "5777",       // Any network (default: none)
    },

저장 후
/migrations 에서
/2_deploy_파일명.sol 생성
2_이름.sol 형식으로 생성해야 함
배포시 숫자를 기억함
reset하면 배포한 계약 다 날라감


계약의 배포
truffle migrate
또는
truffle migrate --network development
또는
truffle deploy
또는
truffle deploy --network development


계약의 method실행
 truffle console 
또는
 truffle console --network development
으로 접속하여
h = await hi.at("0xB504a1A14869B6B0352ad1a29d6e610dD7D61392")
인스턴스 생성 후
h.say()

여기서는
web3.eth.getBalance(address)
가능