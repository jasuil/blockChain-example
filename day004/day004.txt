first class
복습


이벤트 관련 문서
web3js.readthedocs.io


gahache를 새로 시작하면
truffle migrate --reset
해야 함


이벤트 관련 문서
web3js.readthedocs.io

root director 에서
truffle sample

truffle exec ./send_u.js
--> 10이더 전송



react app작성


app에 이력추가
https://web3js.readthedocs.io/en/v1.2.1/web3-eth-contract.html#getpastevents




/**********************************/
동전 던지기 게임
http://bit.ly/2kwIo3e

conflip-game
/client 
---> npm install

게임의 컴파일과 배포
/conflip-game
truffle compile
truffle migrate


dice2.win


//react game app
truffle networks

--> send_h.js 의 주소에 복사

truffle exec ./send_h.js
또는 
truffle console
exec ./send_h.js

앱 새로고침하여 확인




/************************************/
로컬 이더리움 네트워크에 배포

docker start eth-kosmo (도커로 첫 시간에 컨테이너 생성한 것)
로그 보기
docker logs -f eth-kosmo
새창으로 컨테이너에 접속
docker exec -it eth-kosmo /bin/bash

root 확인
cd
pwd

geth 접속
geth attach ipc:/root/edu/geth.ipc

eth.mining

miner.start(1)

eth.coinbase

위 주소 복사 후
eth.getBalance(주소)


conflict game의
truffle_config.js
--->local_geth
주석제거


새창에서
truffle compile
truffle migrate --network local_geth
--> password lock!!!

//unlocking


아까 geth콘솔에서
personal.unlockAccount(주소, "12345678", 0) //0은 락 해제 시간


이제 아까 새창에서
 truffle migrate --network local_geth


metamask에 가서 local_geth
8545 port에 접속하기


트러플 콘솔에 접속
truffle console --network local_geth


send_h.js에서 변경
from:accounts[2] --> from:accounts[0]
그리고 
toAddr = network 의 local_geth 주소 넣기

send_u.js변경
from:accounts[2] --> from:accounts[0]
그리고 
metamask에 
local_geth 네트워크로 접속 후
첫 번째 계정의 주소를
send_u.js
--->toAddr 에 넣기



동일한 온라인 과정
inflearn

-->coldmind
리액트로 구현하는 블록체인